{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Day 1 python","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOEIL9f+8bjEL4sNyzVSt5J"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uJILAcTo-jh1","executionInfo":{"status":"ok","timestamp":1619252851880,"user_tz":-330,"elapsed":1042,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"}},"outputId":"7582ffe2-66d6-4d57-f620-18a883f31332"},"source":["print(\"\\U0001f600\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["ðŸ˜€\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vDlwzM5v_s4m","executionInfo":{"status":"ok","timestamp":1619253356079,"user_tz":-330,"elapsed":2203,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"}},"outputId":"e9c2c418-031b-4c5d-b353-df4fa543b480"},"source":["print(1+2)\n","print(2-3)\n","print(2*3)\n","print(5**4)#to print Raist to power\n","print(7//2)#to find greatest integer\n","print(7/2)\n","print(2%3) #to print the remainder"],"execution_count":null,"outputs":[{"output_type":"stream","text":["3\n","-1\n","6\n","625\n","3\n","3.5\n","2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bzptUePr_s79","executionInfo":{"status":"ok","timestamp":1619254705356,"user_tz":-330,"elapsed":15652,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"}},"outputId":"5d818f6e-da18-444c-e18f-82da1481c02a"},"source":["studentname = input('enter the name of student to send mail:  ')\n","print(\" mail send to \" + studentname)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["enter the name of student to send mail:  Aditya Battin \n"," mail send to Aditya Battin \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3X5ITHvOGhzU","executionInfo":{"status":"ok","timestamp":1619255052276,"user_tz":-330,"elapsed":14578,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"}},"outputId":"ac5b0652-57e0-46c4-a2f7-c8cb0f500e41"},"source":["studentMarks=input('the marks of student in physics :  ')\n","studentname=input('name of student: ')\n","print(\" Hello \" + studentname)\n","print(\"Your marks in Physics are \" + studentMarks)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["the marks of student in physics :  60\n","name of student: Aditya Battin \n"," Hello Aditya Battin \n","Your marks in Physics are 60\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-kuQiIHBJNuh"},"source":["studentMarks = input('enter the student marks :')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"E7wsObstJNy8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643819607178,"user_tz":-330,"elapsed":483,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgLdpd-0kFD-9umUcPJUUKCZ7egxa8lvMv27aICQA=s64","userId":"11140891909434136566"}},"outputId":"e7272af0-93b2-496f-93e7-6fd5d38ccc01"},"source":["def h(n):\n","    s = 0\n","    for i in range(2,n):\n","        if n%i == 0:\n","           s = s+i\n","    return(s)\n","\n","ans = h(60) - h(45);\n","print(ans);"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["75\n"]}]},{"cell_type":"code","source":["def f(x):\n","    d=0\n","    while x >= 1:\n","        (x,d) = (x/7,d+1)\n","    return(d)\n","\n","ans = f(3456)\n","print(ans)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6vBx9gfCSPIT","executionInfo":{"status":"ok","timestamp":1643819644199,"user_tz":-330,"elapsed":400,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgLdpd-0kFD-9umUcPJUUKCZ7egxa8lvMv27aICQA=s64","userId":"11140891909434136566"}},"outputId":"9d2b2d72-f300-48cc-adbe-c604a921e640"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n"]}]},{"cell_type":"markdown","source":["Classes and objects in python\n"],"metadata":{"id":"USF0AE7PmUO1"}},{"cell_type":"code","source":["import random\n","\n","class Die:\n","  #constructor\n","  def _init_(self):\n","    self.value = 1\n","  #inserting an Random value in self\n","  def roll(self):\n","    self.value = random.randint(1,7)\n","\n","class Dice:\n","  def _init_(self):\n","    self.list=[]\n","  def addDie(self,die):\n","    self.list.append(die)\n","  def rollall(self):\n","    for die in self.list:\n","      die.roll()\n","#we have main function\n","\n","print(\"Dice Rolling Program\")\n","#get the count of die to roll\n","count = int(input(\"Give Count no of times the dice will roll : \"))\n","  \n","#get the Dice obj and die obj\n","dice =  Dice()\n","for i in range(count):\n","  die = Die()\n","  dice.addDie(die)\n","\n","while True:\n","  #roll dice\n","  dice.rollall()\n","  print(\"Your Roll : \",end=\"\")\n","  for die in dice.list:\n","    print(die.value)\n","  print(\"\\n\")\n","\n","  choice = input(\"Do you want to roll again (y/n) : \")\n","  if choice != 'y':\n","    print(\"Bye\")\n","    break\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":409},"id":"kPRnZE8pmSVs","executionInfo":{"status":"error","timestamp":1643877196206,"user_tz":-330,"elapsed":3231,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgLdpd-0kFD-9umUcPJUUKCZ7egxa8lvMv27aICQA=s64","userId":"11140891909434136566"}},"outputId":"76fe5b40-b161-4573-dc73-06a6ce5054c6"},"execution_count":9,"outputs":[{"name":"stdout","output_type":"stream","text":["Dice Rolling Program\n","Give Count no of times the dice will roll : 4\n"]},{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-9-f0739ec15af1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcount\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m   \u001b[0mdie\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mDie\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 29\u001b[0;31m   \u001b[0mdice\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maddDie\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdie\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     30\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     31\u001b[0m \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-9-f0739ec15af1>\u001b[0m in \u001b[0;36maddDie\u001b[0;34m(self, die)\u001b[0m\n\u001b[1;32m     13\u001b[0m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0maddDie\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdie\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 15\u001b[0;31m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdie\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     16\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0mrollall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mdie\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'Dice' object has no attribute 'list'"]}]},{"cell_type":"markdown","source":["Write a temprateure converter program using multi object methord"],"metadata":{"id":"xrE9PBtkspo3"}},{"cell_type":"code","source":["import random\n","class Die:\n","    def _init_(self):\n","        self.value=1\n","    def Roll(self):\n","        self.value=random.randrange(1,7)\n","\n","class Dice:\n","    def _init_(self):\n","        self.list=[]   \n","    def addDie(self,die):\n","        self.list.append(die)\n","\n","    def RollAll(self):\n","        for die in self.list:\n","            die.Roll()\n","\n","\n","def main():\n","    print(\"The dice rolling program\")\n","\n","    #get count of dice to roll\n","    count=int(input(\"enter a number to roll dice:\"))\n","\n","    #get Dice object and die objects\n","    dice=Dice()  \n","\n","    for i in range(count):\n","        die=Die()\n","        dice.addDie(die)   \n","\n","    while True:\n","      #roll the dice \n","        dice.RollAll()\n","        for die in dice.list:\n","            print(die.value)\n","        print(\"\\n\")\n","\n","        choice=input(\"do u want to roll the dice again(y/n):\")\n","        if choice!='y':\n","            print(\"bye\")\n","            break\n","if __name__==\"__main__\":\n","    main()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":396},"id":"L8X8KeMznldZ","executionInfo":{"status":"error","timestamp":1643877402021,"user_tz":-330,"elapsed":2862,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgLdpd-0kFD-9umUcPJUUKCZ7egxa8lvMv27aICQA=s64","userId":"11140891909434136566"}},"outputId":"2332731c-2b66-4866-ff23-a5dfb574d2de"},"execution_count":11,"outputs":[{"name":"stdout","output_type":"stream","text":["The dice rolling program\n","enter a number to roll dice:4\n"]},{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-f467785a19f4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     42\u001b[0m             \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     43\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0m__name__\u001b[0m\u001b[0;34m==\u001b[0m\u001b[0;34m\"__main__\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 44\u001b[0;31m     \u001b[0mmain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-11-f467785a19f4>\u001b[0m in \u001b[0;36mmain\u001b[0;34m()\u001b[0m\n\u001b[1;32m     28\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcount\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     29\u001b[0m         \u001b[0mdie\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mDie\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 30\u001b[0;31m         \u001b[0mdice\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maddDie\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdie\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     31\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m     \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-11-f467785a19f4>\u001b[0m in \u001b[0;36maddDie\u001b[0;34m(self, die)\u001b[0m\n\u001b[1;32m     10\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0maddDie\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mdie\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdie\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mRollAll\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'Dice' object has no attribute 'list'"]}]}]}