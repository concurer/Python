{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"3rd python session","provenance":[],"authorship_tag":"ABX9TyM7jIV4xmuKFSTTfUfu5EUO"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WrS0iTFHZi-o","executionInfo":{"elapsed":9157,"status":"ok","timestamp":1620632106135,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"8bc936f0-2d9d-4a62-930b-162b687e882c"},"source":["i=1\n","n=int(input(\"Enter your number : \"))\n","sum=0\n","while (i<=n):\n","  sum+=i\n","  i+=1\n","print(\"the sum of n natural no is \"+str(sum))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter your number : 25\n","the sum of n natural no is 325\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2I-V8MwJI_oE"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9NDG4AGBMdTC","executionInfo":{"elapsed":72537,"status":"ok","timestamp":1620095938844,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"be56500c-43fa-493f-82fe-0c08062542af"},"source":["#fond out the sum of the numbers using the formula methord (n*(n+1))/2 .........\n","n=int(input(\"enter the number n ; \"))\n","print(\"sum of the n natural numbers is : {}\".format((int(n)*int(n+1))/2))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["enter the number n ; 12\n","sum of the n natural numbers is : 78.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VrfgWm5aQvvh","executionInfo":{"elapsed":6267,"status":"ok","timestamp":1620131684819,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"83b7dbe6-b739-48ed-8f31-706ecc560848"},"source":["# to print the sum of each term in a number for 1234 ......  1+2+3+4 \n","number=input(\" Enter your Number : \")\n","i=0\n","sum=0\n","while i < int(len(number)):\n","  sum+=int(number[i])\n","  i+=1\n","print(\"the sum of every term in your Number is {}\".format(sum))\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" Enter your Number : 1234\n","the sum of every term in your Number is 10\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qMfc7CNwYT5z","executionInfo":{"elapsed":13700,"status":"ok","timestamp":1620133105712,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"865f14f0-8ee2-48a2-ebff-5c5f5956f5e8"},"source":["name=input(\"Enter your Full name : \")\n","i=0\n","while i < int(len(name)):\n","  if \n","  X=name.count(name[i])\n","  print(\"{} : {}\".format(name[i],X))\n","  i+=1\n","  "],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter your Full name : Aditya Ganesh Battin\n","A : 1\n","d : 1\n","i : 2\n","t : 3\n","y : 1\n","a : 3\n","  : 2\n","G : 1\n","a : 3\n","n : 2\n","e : 1\n","s : 1\n","h : 1\n","  : 2\n","B : 1\n","a : 3\n","t : 3\n","t : 3\n","i : 2\n","n : 2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Chiq6lOGaCzT","executionInfo":{"elapsed":7527,"status":"ok","timestamp":1620149666604,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"484b1f54-3593-41bf-eadd-12faca527d1f"},"source":["i=0\n","text=\"\"\n","name=input(\"Enter Your name : \")\n","while i < len(name):\n","  if name[i] not in text:\n","    print(f\"{name[i]} : {name.count(name[i])}\")\n","    i+=1\n","    text+=name[i]\n","  i+=1\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter Your name : Aditya\n","A : 1\n","i : 1\n","y : 1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mjRvWR9mh106","executionInfo":{"elapsed":4375,"status":"ok","timestamp":1620151328700,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"6e9296b7-ea66-4831-bee1-7d5ab356484e"},"source":["#using for loop for printing sum n natural no\n","n=int(input(\"enter the number : \"))\n","sum=0\n","n+=1\n","for i in range(1,n):\n","  sum+=i\n","print(f\"{sum}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["enter the number : 10\n","55\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rv9h79SjjHJu","executionInfo":{"elapsed":10826,"status":"ok","timestamp":1620184810349,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"96bc7618-f864-4017-8f58-c83f19a0fef4"},"source":["# using same for  loop find 1234\n","num=input(\"Enter your number :\")\n","sum=0\n","for i in range(0,len(num)):\n","  sum+=int(num[i])\n","print(f\"{sum}\")\n","  \n"," "],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter your number :1598745\n","39\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":129},"id":"Ad1eiQ5pmuA-","executionInfo":{"elapsed":1599,"status":"error","timestamp":1620213291431,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"6a188dd5-e5af-42a7-a2fd-834fb338bfa9"},"source":["import random\n","win_num = random.randint(1,100)\n","guess=1\n","number=int(input(\"enter your first guess : \"))\n","i = 1\n","while i == 1:\n","  if number == win_num:\n","    if guess ==1:\n","      print(\"WOW YOU ARE AMAZING! \\n YOU GUESSED IT IN FIRST TRY \\n\")\n","      i+=1\n","    else : print(f\"Ok Good try \\n you guessed the number in {guess} number of guesses \\n\")\n","           i+=1\n","  else : \n","    if number > win_num:\n","      print(\"TOO HIGH, Guess again\")\n","      guess+=1\n","     number=int(input(f\"what is {guess}th guess : \")\n","    else number < win_num:\n","        print(\"TOO LOW, Guess again \")\n","        guess+=1\n","        number=int(input(f\"what is {guess}th guess : \")\n","      "],"execution_count":null,"outputs":[{"output_type":"error","ename":"IndentationError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-25-9164be2ed933>\"\u001b[0;36m, line \u001b[0;32m12\u001b[0m\n\u001b[0;31m    i+=1\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CwBf5fC_JDbw","executionInfo":{"elapsed":10522,"status":"ok","timestamp":1620403358013,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"afa9e6ff-c69a-416d-d43c-176b397c619b"},"source":["print(\"  GUESS THE NUMBER from 1 to 100  \")\n","import random\n","win=random.randint(1,101)\n","num=int(input(\"Give yor first guess : \"))\n","print(f\"{win}\")\n","n=1\n","guess=1\n","while (n==1) :\n","  if num == win :\n","    print(f\" you won in  \\n In  {guess} no. of guess  \")\n","    n=2\n","  elif num == win and guess==1 :\n","    print(\"Congratulations You did it in First try \")\n","  elif num > win :\n","    print(\"too High , try again  \")\n","    num=int(input(\"guess again \"))\n","    guess+=1\n","  else :\n","    print(\" too low , try again \")\n","    num=int(input(\"guess again \"))\n","    guess+=1"],"execution_count":null,"outputs":[{"output_type":"stream","text":["  GUESS THE NUMBER from 1 to 100  \n","Give yor first guess : 14\n","61\n"," too low , try again \n","guess again 61\n"," you won in  \n"," In  2 no. of guess  \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G7-LNNSpUWXl","executionInfo":{"elapsed":1201,"status":"ok","timestamp":1620403546071,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"c871a896-19eb-45ea-9216-ac83e9b7c207"},"source":["for num in range(1,-11,-1):\n","  print(f\"{num}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1\n","0\n","-1\n","-2\n","-3\n","-4\n","-5\n","-6\n","-7\n","-8\n","-9\n","-10\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x2iwj43ElCXf","executionInfo":{"elapsed":6084,"status":"ok","timestamp":1620631396389,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"1e1f7d40-ec17-4bc9-a99b-61b4c60155be"},"source":["#wow=\"python\"\n","#for i in range(len(wow)):\n","#  print(i)\n","wow=\"python is the best  \"\n","for i in wow:\n","  print(i , end=\" \")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["p y t h o n   i s   t h e   b e s t     "],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-m694nepm0LF","executionInfo":{"elapsed":6719,"status":"ok","timestamp":1620404546666,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"58a12afa-20a5-44ed-dc5f-415a3d90d835"},"source":["# 1234 ------> 1+2+3+4\n","num=input(\" enter your number : \")\n","sum=0\n","for i in num :\n","  sum+=int(i)\n","print(f\"{sum}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" enter your number : 1234\n","10\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pKvEQz-4o745","executionInfo":{"elapsed":8048,"status":"ok","timestamp":1620410092139,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"7de2e626-3f87-4f7d-b2c8-e8865fe3eeaf"},"source":["\"\"\"functions in python\n","python is a dynamic programming language\n","we define function using def: and return\"\"\"\n","\n","def power(a,b):\n","  a=int(input(\" \\tBase \"))\n","  b=int(input(\" \\trase \"))\n","  return a**b\n","\n","power(a,b)"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" \tBase 15\n"," \trase 2\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["225"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vgLX5kw403yI","executionInfo":{"elapsed":6807,"status":"ok","timestamp":1620408757356,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"799447d2-69f4-4943-97ef-65dd2ab8fedc"},"source":["\"\"\"function practice okkkkkk\n","Q. define a function which will take the the name or string and return the last letter of the name,.\"\"\"\n","def op(name):\n","  return name[-1]\n","name=input(\"Enter your name : \")\n","print(f\"{op(name)}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter your name : Aditya \n"," \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v5D5bbaU5M5e","executionInfo":{"elapsed":3625,"status":"ok","timestamp":1620409786789,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"ffa9094f-e41c-4de8-e9ab-f6a642e68b26"},"source":["\"\"\"to define a functiom which tells the number is even \"\"\"\n","def number(a):\n","  a = int(input(\"enter your number\"))\n","  if a%2 == 0:\n","    print(\"Number is even\")\n","  else:\n","    print(\"Number is odd\")\n","\n","\n","number(11)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["enter your number11\n","Number is odd\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"WIFkEXlN-8KY","executionInfo":{"elapsed":1412,"status":"ok","timestamp":1620410538734,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"86147346-95ce-4ef7-962e-534e014b593c"},"source":["def odd_even(a):\n","  if a%2==0:\n","    return \"EVEN\"\n","  else :\n","    return \"ODD\"\n","\n","\n","odd_even(6868656948446)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'EVEN'"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e7ugjGzUAWbX","executionInfo":{"elapsed":1500,"status":"ok","timestamp":1620410853336,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"0450eb0a-1441-46eb-d2ed-ac050b87d343"},"source":["def is_even(a):\n","  if a%2==0:\n","    return True\n","  return False\n","\n","\n","is_even(52)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":49}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XPHsraaMBfKg","executionInfo":{"elapsed":1296,"status":"ok","timestamp":1620411103749,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"2b69a86c-521a-40cf-f371-55bd48bd45ae"},"source":["#the pythonic way of writing the privious code\n","def is_even(a):\n","  return a%2==0\n","\n","is_even(545)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lDlrBAI-Cr30","executionInfo":{"elapsed":1271,"status":"ok","timestamp":1620411629980,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"544e26a4-74a9-4859-b45e-d5506813797b"},"source":["# Example to def a function which returns a larger num from given two\n","def big(a,b):\n","  if a>b: return print(f\"the larger no is {a}\")\n","  return print(f\" the larger no is {b}\")\n","big(452,6164)"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" the larger no is 6164\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LEGEp2iiCKyg","executionInfo":{"elapsed":1088,"status":"ok","timestamp":1620428399000,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"f2c71733-7c06-4221-ccba-1fd35e481de3"},"source":["\"\"\"function in a function\"\"\"\n","def big(a,b):\n","  if a>b: return a\n","  return b\n","\n","def greater(a,b,c):\n","  if big(a,b)>c: return print(f\"The larger no is {big(a,b)}\")\n","  return print(f\"The larger no is {c}\")\n","\n","greater(1,2,3)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["The larger no is 3\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XihkCimZD4og","executionInfo":{"elapsed":8557,"status":"ok","timestamp":1620429171933,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"a95b7b6a-d0dc-4dbb-8343-5e8c1915fc8a"},"source":["\"\"\"to check wether the given word is a palendrome by defining a function\"\"\"\n","word=input(\"Enter your word \")\n","def palendrome(word):\n","  if word==word[::-1]: return True\n","  return False\n","\n","\n","palendrome(f\"{word}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter your word ADIDA\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ChBZNdeNHSgs","executionInfo":{"elapsed":5819,"status":"ok","timestamp":1620429393177,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"d4bc05d3-db41-4de7-e7c7-d3ad22687c20"},"source":["word=input(\"Enter your word \")\n","def palendrome(word):\n","   return word==word[::-1]\n","\n","palendrome(f\"{word}\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter your word ADIDA\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vvORiRJxIEri","executionInfo":{"elapsed":4061,"status":"ok","timestamp":1620431267066,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"03f451f6-15fb-414d-a962-2bef80434516"},"source":["\"\"\"Fibonacchi series is a series where the term value is sum of the privious two numbers or terms \n","0,1,1,2,3,5,8,13,21,...................\n","Fibonacchi series always starts with 0,1\n","Q. define a function such that it it asks num of term till which we need fibonachi series \n","and in return gives the fibonacchi series \n","input----------->output \n"," 1                  0\n"," 2                  1\n"," 3                  1\"\"\"\n","\n","def fibonacchi(n):\n","  a=0 #First no.\n","  b=1 #Second no.\n","  if n==1 : return print(a)\n","  elif n==2: return print(a,b)\n","  else : \n","    print(a,b,end=\" \" )\n","    for i in range(1,n-2):\n","      c=a+b\n","      a=b\n","      b=c\n","      print(c,end=\" \")\n","\n","n=int(input(\" nth term for fibonacchi series : \"))\n","print(fibonacchi(n))"],"execution_count":null,"outputs":[{"output_type":"stream","text":[" nth term for fibonacchi series : 12\n","0 1 1 2 3 5 8 13 21 34 55 None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NoKmOEbxKqpH","executionInfo":{"elapsed":1132,"status":"ok","timestamp":1620430329658,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"428977ad-7544-41b7-a5ad-034ab917c2de"},"source":["\"\"\"the for range thing , \"\"\"\n","for i in range(1,11):\n","  print(i,end=\" \")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1 2 3 4 5 6 7 8 9 10 "],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"C32EKDDcGgEs"},"source":["#SCOPE of the Variable............\n","\"\"\"cope of the variable is the extent or the range to use it i.e if\n","\n","   n=3 #is a universal variable\n","   def fun(x):\n","     x=2 #IS LOCAL VARIABLE\n","     return x \n","  def fun2():\n","    print x\n","    \n","  for this code the extent of x is in fun only so it will not print as it is a local variable \"\"\"\n","  "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bArQMDXpH9Ke","executionInfo":{"elapsed":1120,"status":"ok","timestamp":1620531711289,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"ec4ea972-9d3f-4d14-ec58-98fc1303d6ac"},"source":["\"\"\"LIST is a data structure is a collection of item ORDERED COLLECTIONS OF ITEMS \n","we can store any values in list such as int,float,string,etc.\n","we can mix or store int or string or sprcial values in list\"\"\"\n","\n","numbers =[1,2,333,444444,555555]\n","words = [\"words\",'Strings',\"aditya\"]\n","mix=[1,\"words\",None,True]\n","\n","print(numbers,words,mix)\n","\n","\"\"\"list indexing and slising are same as strings\"\"\"\n","print(numbers[2])\n","print(mix[0:2])\n","print(mix[-1])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1, 2, 333, 444444, 555555] ['words', 'Strings', 'aditya'] [1, 'words', None, True]\n","333\n","[1, 'words']\n","True\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oOI3S7DvN67F","executionInfo":{"elapsed":2812,"status":"ok","timestamp":1620538833855,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"24a03d38-6f29-4fb2-e8a4-ff83267e8f76"},"source":["\"\"\"Adding an object in a list is most simple and Complicated thing\"\"\"\n","list_1 = [\"apple\",'mango','watermelon','grapes','banana']\n","#1 append methord.\n","#in this methord the list is mentioned with .append() in the () the object is written that is to be added.\n","#NOTE: the object which is added is added at last of the mentioned list and you can add .\n","\n","list_1.append('Ciku') \n","print(list_1 , end='\\n \\n')\n","\n","#2.insert methord.\n","#in the merthord is used as list.insert(position,object)\n","\n","list_1.insert(1,'melon')\n","print(list_1, end='\\n \\n')\n","\n","#3.Concarenate two lists int a new one \n","#just add botha lists into a new one \n","\n","list_2 = [ \"Naruto\",'sasuke','henata','kakashi','Sakura']\n","full_list = list_1 + list_2\n","print(full_list, end='\\n \\n')\n","\n","#4.EXTEND METHORD\n","#it adds the list to the existing lst no need io form a new list\n","\n","list_1.extend(list_2)\n","print(list_1, end='\\n \\n')\n","\n","\"\"\"Common methords to delete the obj from the list \"\"\"\n","#pop methord. .pop(position of obj to pop)\n","\n","list_1.pop(1)\n","print(list_1,end='\\n \\n')\n","\n","#delete methord ......... del list[position ehivh you want to delete]\n","\n","del list_1[2]\n","print(list_1,end='\\n \\n')\n","\n","#remove methord............  list.remove('obj')\n","\n","list_1.remove(\"sasuke\")\n","print(list_1,end='\\n \\n')\n","\n"," # check wether a list consist of a object or not\n"," \n","if \"apple\" in list_1:\n","   print(\"true\")\n","else :print(\"False\")\n","\n","#def a function which says wether a following list consists of a following word or number.\n","\n","def word_present(n ,x):\n","  if f'{n}' in x :\n","    return True\n","  return False\n","\n","word_present(\"Naruto\",list_1)\n","\n","word_present(\"Boruto\",list_1)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["['apple', 'mango', 'watermelon', 'grapes', 'banana', 'Ciku']\n"," \n","['apple', 'melon', 'mango', 'watermelon', 'grapes', 'banana', 'Ciku']\n"," \n","['apple', 'melon', 'mango', 'watermelon', 'grapes', 'banana', 'Ciku', 'Naruto', 'sasuke', 'henata', 'kakashi', 'Sakura']\n"," \n","['apple', 'melon', 'mango', 'watermelon', 'grapes', 'banana', 'Ciku', 'Naruto', 'sasuke', 'henata', 'kakashi', 'Sakura']\n"," \n","['apple', 'mango', 'watermelon', 'grapes', 'banana', 'Ciku', 'Naruto', 'sasuke', 'henata', 'kakashi', 'Sakura']\n"," \n","['apple', 'mango', 'grapes', 'banana', 'Ciku', 'Naruto', 'sasuke', 'henata', 'kakashi', 'Sakura']\n"," \n","['apple', 'mango', 'grapes', 'banana', 'Ciku', 'Naruto', 'henata', 'kakashi', 'Sakura']\n"," \n","true\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TGz5I3W8VHRq","executionInfo":{"elapsed":1599,"status":"ok","timestamp":1620539105076,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"2ef4fdc3-789e-4eb5-e457-42ee26f2b3ff"},"source":[" # check wether a list consist of a object or not\n"," list_1 = ['Naruto','Sasuke']\n"," def word_present(n ,x):\n","  if f'{n}' in x :\n","    return True\n","  return False\n","\n","word_present(\"Naruto\",list_1)\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I7G9NsZrqYLb","executionInfo":{"elapsed":3979,"status":"ok","timestamp":1620655967507,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"08035c5e-0593-4c27-8448-4d8c534e7cdd"},"source":["#some Common functions of list................\n","list_n=['naruto','boruto','sasuke','henata','eruka','hokage','tsunate','oruchimaru']\n","#count..  list.count(obj) will count how many times the object is in the list \n","o=int(list_n.count('naruto'))\n","print(f'{o}')\n","#list.sort() will sort the given alphabetical or numerical order\n","#list_n.sort()  # will sort it and store it in tat form \n","print(sorted(list_n))#will only print the sorted list but the list will remain as it is \n","#\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["1\n","['boruto', 'eruka', 'henata', 'hokage', 'naruto', 'oruchimaru', 'sasuke', 'tsunate']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"REEuBY2otQaj","executionInfo":{"elapsed":9103,"status":"error","timestamp":1620576295404,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"},"user_tz":-330},"outputId":"a22c9c79-a126-435a-938e-74314d1496cf"},"source":["#def a function which takes a list as imput and gives the square of every number................\n","\n","number=[ 1,]\n","def list_square(l):\n","  sq=[]\n","  for i in l :\n","    sq.append(i**2)\n","    return sq\n","\n","print(list_square(number))\n","print(number)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["enter your list by appying \" \"  1 2 3 4\n"],"name":"stdout"},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-15c441a908c6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0msq\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlist_square\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumber\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumber\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-12-15c441a908c6>\u001b[0m in \u001b[0;36mlist_square\u001b[0;34m(l)\u001b[0m\n\u001b[1;32m      5\u001b[0m   \u001b[0msq\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m   \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0ml\u001b[0m \u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m     \u001b[0msq\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0msq\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: unsupported operand type(s) for ** or pow(): 'str' and 'int'"]}]},{"cell_type":"code","metadata":{"colab":{"background_save":true},"id":"kOe2mUqnnjlq","outputId":"d0d0ad2e-2f9c-4ddc-fc95-3a3dc57cb249"},"source":["#to take an input string from a user and define a function that will square the numbers in it\n","ok = input()\n","user_input = int(ok.split(\",\")\n","def squre_list(l):\n","  list_1=[]\n","  for i in range(0,len(l)):\n","     x=number[i]\n","     list_1.append(x**2)\n","  print(list_1)\n","\n","squre_list(user_input)\n"],"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-14-ba234380c947>\"\u001b[0;36m, line \u001b[0;32m4\u001b[0m\n\u001b[0;31m    def squre_list(l):\u001b[0m\n\u001b[0m      ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","metadata":{"id":"FvkgM32CTbgS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1621006819529,"user_tz":-330,"elapsed":2862,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"}},"outputId":"acff490f-f162-4604-af72-8ee0688eae56"},"source":["x=\"abcd\"\n","for i in x:\n","  print(i)\n","  x.upper()"],"execution_count":1,"outputs":[{"output_type":"stream","text":["a\n","b\n","c\n","d\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"oz-OMUurioOw","executionInfo":{"status":"error","timestamp":1621006981672,"user_tz":-330,"elapsed":1524,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"}},"outputId":"f0ae2d00-f1d3-4279-919b-b5b659c4359d"},"source":["def fir(name):\n","  print(name[0])\n","print(fir(9))"],"execution_count":2,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-9b2e25b1d793>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mfir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-2-9b2e25b1d793>\u001b[0m in \u001b[0;36mfir\u001b[0;34m(name)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mfir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfir\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'int' object is not subscriptable"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xDcVPsv2lqiP","executionInfo":{"status":"ok","timestamp":1621007812596,"user_tz":-330,"elapsed":1383,"user":{"displayName":"ADITYA GANESH BATTIN","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhfFdRlRUI1HiY2NnyNGUGOJcql2Z6ApvaHynw9=s64","userId":"11140891909434136566"}},"outputId":"01b2853e-fa0c-4102-b453-b9838bdb19e1"},"source":["list_1=[1,2,3,4]\n","list_1[:3]= \"java\"\n","print(list_1)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["['j', 'a', 'v', 'a', 4]\n"],"name":"stdout"}]}]}